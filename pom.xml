<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>org.openthinclient</groupId>
	<artifactId>master</artifactId>
	<packaging>pom</packaging>
	<name>openthinclient.org</name>
	<version>1.0.2-SNAPSHOT</version>

	<modules>
		<module>common</module>
		<module>server</module>
		<module>manager</module>
		<module>dist</module>
	</modules>

	<!-- multiline descriptions break the manifests generated by plexus...
		<description>
		openthinclient.org consists of a ThinClient operating system
		along with a comprehensive management solution. It is intended
		for environments where a medium to large number of ThinClients
		must be supported and managed efficiently.
		</description>
	-->
	<organization>
		<name>openthinclient GmbH</name>
		<url>http://www.openthinclient.com</url>
	</organization>
	<url>http://www.openthinclient.org</url>

	<developers>
		<developer>
			<name>Martin Kreiner</name>
			<email>m.kreiner@levigo.de</email>
			<organization>levigo systems GmbH</organization>
			<organizationUrl>http://www.levigo.de</organizationUrl>
			<roles>
				<role>Developer</role>
				<role>Project lead</role>
			</roles>
			<timezone>MET</timezone>
		</developer>
		<developer>
			<name>Tobias Abt</name>
			<email>t.abt@levigo.de</email>
			<organization>levigo systems GmbH</organization>
			<organizationUrl>http://www.levigo.de</organizationUrl>
			<roles>
				<role>Developer</role>
			</roles>
			<timezone>MET</timezone>
		</developer>
		<developer>
			<name>Klaus Rein</name>
			<email>k.rein@levigo.de</email>
			<organization>levigo systems GmbH</organization>
			<organizationUrl>http://www.levigo.de</organizationUrl>
			<roles>
				<role>Developer</role>
			</roles>
			<timezone>MET</timezone>
		</developer>
		<developer>
			<name>JÃ¶rg Henne</name>
			<email>j.henne@levigo.de</email>
			<organization>levigo systems GmbH</organization>
			<organizationUrl>http://www.levigo.de</organizationUrl>
			<roles>
				<role>Project consultant :-)</role>
			</roles>
			<timezone>MET</timezone>
		</developer>
		<developer>
			<name>Michael Gold</name>
			<email>m.gold@levigo.de</email>
			<organization>levigo systems GmbH</organization>
			<organizationUrl>http://www.levigo.de</organizationUrl>
			<roles>
				<role>Developer</role>
			</roles>
			<timezone>MET</timezone>
		</developer>
		<developer>
			<name>Florian Tausch</name>
			<email>f.tausch@levigo.de</email>
			<organization>levigo systems GmbH</organization>
			<organizationUrl>http://www.levigo.de</organizationUrl>
			<roles>
				<role>Developer</role>
			</roles>
			<timezone>MET</timezone>
		</developer>
	</developers>

	<contributors>
		<contributor>
			<name>Jelkica Cirilovic</name>
			<email>j.cirilovic@levigo.de</email>
			<organization>levigo systems GmbH</organization>
			<organizationUrl>http://www.levigo.de</organizationUrl>
			<roles>
				<role>documentation</role>
			</roles>
			<timezone>MET</timezone>
		</contributor>
	</contributors>

	<inceptionYear>2007</inceptionYear>

	<licenses>
		<license>
			<name>GPL v2</name>
			<distribution>manual</distribution>
			<url>http://www.gnu.org/copyleft/gpl.html</url>
		</license>
	</licenses>

	<issueManagement>
		<system>github</system>
		<url>http://issues.openthinclient.org</url>
	</issueManagement>

	<scm>
		<connection>scm:git:git@github.com/fernanfs/openthinclient-suite.git</connection>
		<developerConnection>scm:git:ssh://git@github.com/fernanfs/openthinclient-suite.git</developerConnection>
	</scm>

	<properties>
		<jboss.version>3.2.3</jboss.version>
		<!-- <jboss.version>4.0.2</jboss.version> -->
		<apacheds.version>1.0.2</apacheds.version>
		<levigo-utils.version>2.0.4</levigo-utils.version>

		<!-- Izpack installer properties -->
		<dist.name>openthinclient.org</dist.name>
		<dist.shortname>openthinclient</dist.shortname>
		<dist.version>UNBEKANNTE-VERSION</dist.version>
		<dist.nickname>UNBEKANNTER-NICKNAME</dist.nickname>
		<dist.url>http://openthinclient.org</dist.url>
		<dist.email>info@openthinclient.org</dist.email>
		<dist.wrapper.console.title>${dist.name}</dist.wrapper.console.title>
		<dist.wrapper.ntservice.name>${dist.shortname}</dist.wrapper.ntservice.name>
		<dist.wrapper.ntservice.displayname>${dist.name}</dist.wrapper.ntservice.displayname>
		<dist.wrapper.ntservice.description>${dist.name} Server</dist.wrapper.ntservice.description>
	</properties>

	<build>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.5</source>
					<target>1.5</target>
				</configuration>
			</plugin>

            <plugin>
              <artifactId>maven-clean-plugin</artifactId>
              <version>2.5</version>
              <configuration>
                <filesets>
                  <fileset>
                    <directory>jboss/server/default/data/nfs/root/deploy/</directory>
                    <includes>
                      <include>*.ear</include>
                      <include>*.sar</include>
                    </includes>
                    <!--excludes>
                      <exclude>**/important.log</exclude>
                      <exclude>**/another-important.log</exclude>
                    </excludes-->
                    <followSymlinks>false</followSymlinks>
                  </fileset>
                </filesets>
              </configuration>
            </plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<preparationGoals>clean</preparationGoals>
					<autoVersionSubmodules>true</autoVersionSubmodules>
				</configuration>
			</plugin>




        </plugins>
		
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.1</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>jboss-packaging-maven-plugin</artifactId>
					<version>2.2</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>jboss-maven-plugin</artifactId>
					<version>1.5.0</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-ear-plugin</artifactId>
					<version>2.6</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-ejb-plugin</artifactId>
					<version>2.3</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>1.8</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>webstart-maven-plugin</artifactId>
					<version>1.0-beta-3</version>
				</plugin>
			</plugins>

		</pluginManagement>
	</build>

	<repositories>
		<repository>
			<id>openthinclient.org</id>
			<url>http://openthinclient.sourceforge.net/maven2</url>
		</repository>
		<repository>
			<id>openthinclient.org-public</id>
			<url>https://secure.openthinclient.org/nexus/content/groups/public</url>
		</repository>
		<repository>
			<id>jboss.thirdparty.releases</id>
			<url>https://repository.jboss.org/nexus/content/repositories/thirdparty-releases</url>
		</repository>
		<repository>
			<id>jboss.releases</id>
			<url>https://repository.jboss.org/nexus/content/repositories/releases/</url>
		</repository>
<!--		<repository>-->
<!--			<id>codehaus</id>-->
<!--			<name>Codehaus Repository</name>-->
<!--			<url>http://repository.codehaus.org</url>-->
<!--		</repository>-->
		<repository>
			<id>codehaus snapshots</id>
			<name>Codehaus Snapshot Repository</name>
			<url>http://nexus.codehaus.org/snapshots/</url>
		</repository>
	</repositories>

	<pluginRepositories>
<!--		<pluginRepository>-->
<!--			<id>codehaus mojo</id>-->
<!--			<name>Codehaus Plugin Repository</name>-->
<!--			<url>http://repository.codehaus.org/</url>-->
<!--		</pluginRepository>-->
		<pluginRepository>
			<id>codehaus mojo snapshots</id>
			<name>Codehaus Plugin Snapshots Repository</name>
			<url>http://nexus.codehaus.org/snapshots/</url>
		</pluginRepository>
		<pluginRepository>
			<id>apache.org</id>
			<name>Maven Plugin Snapshots</name>
			<url>http://people.apache.org/repo/m2-snapshot-repository</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>

	<distributionManagement>
		<repository>
			<id>openthinclient.org-releases</id>
			<url>https://secure.openthinclient.org/nexus/content/repositories/releases/</url>
		</repository>
		<snapshotRepository>
			<id>openthinclient.org-snapshots</id>
			<url>https://secure.openthinclient.org/nexus/content/repositories/snapshots/</url>
		</snapshotRepository>
	</distributionManagement>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>castor</groupId>
				<artifactId>castor</artifactId>
				<version>0.9.9.1</version>
			</dependency>

			<dependency>
				<groupId>net.sf.ehcache</groupId>
				<artifactId>ehcache</artifactId>
				<version>1.2</version>
			</dependency>

			<dependency>
				<groupId>commons-collections</groupId>
				<artifactId>commons-collections</artifactId>
				<version>3.2</version>
			</dependency>

			<dependency>
				<groupId>jboss</groupId>
				<artifactId>jboss-system</artifactId>
				<version>${jboss.version}</version>
			</dependency>

			<dependency>
				<groupId>log4j</groupId>
				<artifactId>log4j</artifactId>
				<version>1.2.14</version>
			</dependency>

			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>nlog4j</artifactId>
				<version>1.2.25</version>
				<scope>provided</scope>
			</dependency>

			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.4</version>
			</dependency>

			<dependency>
				<groupId>org.apache.directory.server</groupId>
				<artifactId>apacheds-core-shared</artifactId>
				<version>${apacheds.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.directory.server</groupId>
				<artifactId>apacheds-protocol-shared</artifactId>
				<version>${apacheds.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.directory.server</groupId>
				<artifactId>apacheds-core</artifactId>
				<version>${apacheds.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.directory.server</groupId>
				<artifactId>apacheds-server-main</artifactId>
				<version>${apacheds.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.directory.shared</groupId>
				<artifactId>shared-ldap</artifactId>
				<version>0.9.5.5</version>
			</dependency>

			<dependency>
				<groupId>org.apache.directory.shared</groupId>
				<artifactId>shared-asn1</artifactId>
				<version>0.9.5.5</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<!--
			<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>nlog4j</artifactId>
			<scope>provided</scope>
			</dependency>
		-->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<scope>provided</scope>
		</dependency>
	</dependencies>

    <profiles>
        <profile>
            <id>build-deb</id>
            <activation>
                    <file>
                        <exists>src/debian/control</exists>
                    </file>
            </activation>

            <properties>
                <jdeb.package-version>${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.incrementalVersion}-${buildNumber}</jdeb.package-version>

                <!--jdeb.module-packaging>${packaging}</jdeb.module-packaging-->
                <jdeb.otc-homepage>http://www.openthinclient.org</jdeb.otc-homepage>
                <jdeb.filename-arch>i386</jdeb.filename-arch>

            </properties>




            <build>
                <plugins>


                      <!-- workaround for project.packaging in submodules with jboss-sar packaging to make file extensions work-->
                      <plugin>
                        <groupId>org.codehaus.groovy.maven</groupId>
                        <artifactId>gmaven-plugin</artifactId>
                        <executions>
                          <execution>
                            <id>set-property-jdeb.module-packaging</id>
                            <phase>compile</phase>
                            <goals>
                              <goal>execute</goal>
                            </goals>
                            <configuration>
                              <classpath>
                                <element>
                                  <groupId>commons-lang</groupId>
                                  <artifactId>commons-lang</artifactId>
                                  <version>2.4</version>
                                 </element>
                              </classpath>
                              <source>
                                if (project.packaging == 'jboss-sar') {
                                  project.properties.setProperty('jdeb.module-packaging', 'sar');
                                } else {
                                  project.properties.setProperty('jdeb.module-packaging', 'ear');
                                }
                              </source>
                            </configuration>
                          </execution>
                        </executions>
                      </plugin>


                    <!-- splits project.version into 
                        ${parsedVersion.majorVersion}
                        ${parsedVersion.minorVersion}
                        ${parsedVersion.incrementalVersion} -->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <version>1.8</version>
                        <executions>
                          <execution>
                            <id>parse-version</id>
                            <goals>
                              <goal>parse-version</goal>
                            </goals>
                          </execution>
                        </executions>
                    </plugin>


                    <!-- maintains a buildnumber via property-file (buildNumber.properties in the corresponding module) -->
                    <!--plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>buildnumber-maven-plugin</artifactId>
                        <version>1.0-beta-3</version>
                        <executions>
                            <execution>
                                <phase>validate</phase>
                                <goals>
                                    <goal>create</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <buildNumberPropertiesFileLocation>${basedir}/buildNumber.properties</buildNumberPropertiesFileLocation>
                            <format>{0,number,####}</format>
                            <items>
                                <item>buildNumber</item>
                            </items>
                            <doCheck>false</doCheck>
                            <doUpdate>false</doUpdate>
                        </configuration>
                    </plugin-->

                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>1.3.2</version>
                        <executions>
                            <!-- writes "<major>.<minor>.<increment>-<build>" to src/debian/changelog -->
                          <!--execution>
                            <id>write-version-to-changelog</id>
                            <phase>package</phase>
                            <goals>
                              <goal>exec</goal>
                            </goals>
                                <configuration>
                                    <executable>dch</executable>
                                    <workingDirectory>${basedir}/src</workingDirectory>
                                    <arguments>
                                        <argument>-v</argument>
                                        <argument>${jdeb.package-version}</argument>
                                        <argument>TESTBUILD</argument>
                                  </arguments>
                                  <outputFile>${project.build.directory}/dch-output</outputFile>
                                </configuration>
                           </execution-->
                           <!--execution>
                            <id>checkout-changelog</id>
                            <phase>clean</phase>
                            <goals>
                              <goal>exec</goal>
                            </goals>
                                <configuration>
                                    <executable>git</executable>
                                    <workingDirectory>${basedir}/src</workingDirectory>
                                    <arguments>
                                        <argument>checkout</argument>
                                        <argument>debian/changelog</argument>
                                  </arguments>
                                </configuration>
                           </execution-->
                       </executions>
                   </plugin>

                    <plugin>
                    <artifactId>jdeb</artifactId>
                    <groupId>org.vafer</groupId>
                    <version>1.3</version>
                    <executions>
                        <execution>
                            <phase>package</phase>
                            <goals>
                                <goal>jdeb</goal>
                            </goals>
                            <configuration>
                                <!--deb>${project.build.directory}/openthinclient-${jdeb.artifactId}_${jdeb.package-version}_${jdeb.filename-arch}.deb</deb-->
                                <deb>${project.build.directory}/openthinclient-${jdeb.artifactId}_${project.version}_${jdeb.filename-arch}.deb</deb>
                                <verbose>true</verbose>
                                <snapshotExpand>true</snapshotExpand>
                                <!-- expand "SNAPSHOT" to what is in the "USER" env variable -->
                                <!--snapshotEnv>USER</snapshotEnv-->
                                <verbose>true</verbose>
                                <controlDir>${basedir}/src/debian</controlDir>
                                <!--controlDir>${basedir}/src/deb/control</controlDir-->
                                <dataSet>
                                    <data>
                                      <!--src>${project.build.directory}/${artifactId}.${packaging}</src-->
                                      <src>${project.build.directory}/${artifactId}.${jdeb.module-packaging}</src>
                                      <!--src>${project.build.directory}/${artifactId}.${module-packaging}</src-->
                                      <type>file</type>
                                      <mapper>
                                        <type>perm</type>
                                        <prefix>/deploy</prefix>
                                        <!--user>loader</user>
                                        <group>loader</group-->
                                      </mapper>
                                    </data>
                                    <data>
                                      <src>${basedir}/src/resources/schema</src>
                                      <type>directory</type>
                                      <mapper>
                                        <type>perm</type>
                                        <prefix>/schema</prefix>
                                        <!--user>loader</user>
                                        <group>loader</group-->
                                      </mapper>
                                    </data>
                               </dataSet>
                            </configuration>
                        </execution>
                    </executions>
                    </plugin>

                    <plugin>
                      <artifactId>maven-antrun-plugin</artifactId>
                      <version>1.4</version>
                      <executions>
                        <execution>
                          <id>copy-changelog</id>
                          <phase>package</phase>
                          <configuration>
                            <tasks>
                              <copy file="${basedir}/src/debian/changelog" tofile="${project.build.directory}/openthinclient-${jdeb.artifactId}.changelog"/>
                            </tasks>
                          </configuration>
                          <goals>
                            <goal>run</goal>
                          </goals>
                        </execution>
                        <execution>
                            <phase>prepare-package</phase>
                            <id>echo-hints-for-dch</id>
                            <goals>
                                <goal>run</goal>
                            </goals>
                            <configuration>
                                <tasks>
                                    <echo>###########################</echo>
                                    <echo>execution-id "write-version-to-changelog" contains execution on debchange (dch) via shell</echo>
                                    <echo>output goes to: ${project.build.directory}/dch-output</echo>
                                    <echo>if "write-version-to-changelog" fails, run "mvn clean" to checkout the changelog</echo>
                                    <echo>###########################</echo>
                                </tasks>
                            </configuration>
                        </execution>
                      </executions>
                    </plugin>

                    <plugin>
                        <!-- Run with:
                            mvn bash:run
                            mvn install
                        -->
                        <groupId>com.atlassian.maven.plugins</groupId>
                        <artifactId>bash-maven-plugin</artifactId>
                        <version>1.0-SNAPSHOT</version>
                        <executions>
                            <execution>
                                <id>release</id>
                                <phase>deploy</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <script>
                                COOK="Ducasse"
                                echo "The best cook is: $COOK"
                                echo "${jdeb.module-packaging}"
                                echo "${project.version}"
                                echo "${jdeb.package-version}"
                                exit 1



                            </script>
                        </configuration>
                    </plugin>


                </plugins>

            </build>


        </profile>

<!-- hier fehlt noch ein profil, das fÃ¼r den release der pakete zustÃ¤ndig ist -->


        <!--profile>
        <id>gmaven-test</id>
            <activation>
                    <file>
                        <exists>src/debian/control</exists>
                    </file>
            </activation>
            <build>
                <plugins>


                      <plugin>
                        <groupId>org.codehaus.groovy.maven</groupId>
                        <artifactId>gmaven-plugin</artifactId>
                        <executions>
                          <execution>
                            <id>test-gmaven</id>
                            <phase>validate</phase>
                            <goals>
                              <goal>execute</goal>
                            </goals>
                            <configuration>
        <properties>
          <header_file>changelog_text</header_file>
        </properties>
                              <classpath>
                                <element>
                                  <groupId>commons-lang</groupId>
                                  <artifactId>commons-lang</artifactId>
                                  <version>2.4</version>
                                 </element>
                              </classpath>
                              <source>
          def file = new File(project.properties.header_file)
          project.properties.header_content = file.getText()
                              </source>
                            </configuration>
                          </execution>
                        </executions>
                      </plugin>

</plugins>
</build>
        </profile-->


    </profiles>

</project>

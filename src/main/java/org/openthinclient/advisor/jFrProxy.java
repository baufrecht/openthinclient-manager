package openthinclientadvisor;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.Window;

/**
 * GUI zum Setzen der Proxyeinstellungen.
 * @author Benedikt Diehl
 */
public class jFrProxy extends javax.swing.JFrame {

    /**
     * Speichert die Information ob ein Proxyserver aktiv ist.
     */
    private static String ProxySet = "";
    /**
     * Speichert den Port des Proxyservers.
     */
    private static String ProxyPort = "";
    /**
     * Speichert die Adresse des Proxyservers.
     */
    private static String ProxyAdress = "";

    /**
     * Der Konstruktor setzt die Oberfläche sichtbar und zentriert diese in der Bildschirmmitte.
     * Der Parameter "values" enthält die im Systemangewandten Proxydaten.
     * Diese werden beim initialisieren des Proxyfensters von der Klasse "cNetwork" abgeholt.
     * Die entsprechenden Felder der Oberfläche werden mit diesen Informationen beschrieben.
     *
     * @param values
     * Enthält die von der Klasse "cNetwork" gelieferten Proxydaten.
     */
    public jFrProxy(String values) {
        initComponents();
        this.setVisible(true);
        this.centerGUI(this);
        this.setVariablen(values);
        this.setzeProxyGUI();

    }

    /**
     * Teilt die Stringkette und speichert deren Informationen in den Variablen.
     * @param a
     * Enthält die Stringkette mit den Proxydaten der Klasse "cNetwork".
     */
    private void setVariablen(String a) {
        String[] splittArray = a.split(":", -1);
        ProxySet = splittArray[0];
        ProxyPort = splittArray[1];
        ProxyAdress = splittArray[2];

    }

    /**
     * Setzt die gespeicherten Proxy Variablen zu einer Stringkette zusammen.
     * Die Daten werden mit dem Trennzeichen ":" in der Form "ProxySet:ProxyPort:ProxyAdress" zusammengefügt.
     *
     * @return 
     * Der return Parameter enthält die zusammengesetzte Stringkette der Proxy Daten.
     * Format "ProxySet:ProxyPort:ProxyAdress"
     */
    public static String getProxySettings() {
        String Werte = ProxySet + ":" + ProxyPort + ":" + ProxyAdress;
        return Werte;
    }

    /**
     * Setzt die Informationen der Variablen auf der Oberfläche.
     * Die Checkbox jCBoxProxy und die Felder jTxtProxyHost und jTxtProxyPort werden beschrieben.
     */
    private void setzeProxyGUI() {
        if (ProxySet.equals("true")) {
            jCBoxProxy.setSelected(true);
            this.EnableAndDisableFields();
        } else if (ProxySet.equals("false")) {
            jCBoxProxy.setSelected(false);
            this.EnableAndDisableFields();
        }
        jTxtProxyHost.setText(ProxyAdress);
        jTxtProxyPort.setText(ProxyPort);
    }

    /**
     * Die Eingabefelder jTxtProxyHost und jTxtProxyPort werden gesperrt oder freigegeben.
     * Diese Freigabe wird anhand des Wertes in der Variable ProxySet durchgeführt.
     */
    private void EnableAndDisableFields() {
        jTxtProxyHost.setEnabled(Boolean.parseBoolean(ProxySet));
        jTxtProxyPort.setEnabled(Boolean.parseBoolean(ProxySet));
    }

    /**
     * Die Informationen der Textfelder werden in die Variablen geschrieben.
     */
    private void Speichern() {
        ProxyAdress = jTxtProxyHost.getText();
        ProxyPort = jTxtProxyPort.getText();
    }

    /**
     * Zentriert die Oberfläche in der Bildschirmmitte.
     */
    private void centerGUI(Window gui) {
        Dimension dm = Toolkit.getDefaultToolkit().getScreenSize();
        double width = dm.getWidth();
        double height = dm.getHeight();
        double xPosition = (width / 2 - gui.getWidth() / 2);
        double yPosition = (height / 2 - gui.getHeight() / 2);
        gui.setLocation((int) xPosition, (int) yPosition);
    }

    /**
     * Schließt das Fenster jFrProxy.
     * Alle Änderungen werden verworfen und die Programmoberfläche wird wieder Freigegeben.
     * Mit dieser Methode wird der Button jBtnProxyAbort und der X Button abgefangen.

     */
    private void Abbruch() {
        this.dispose();
        cVerwaltung.GUIUnlock();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLbProxyhost = new javax.swing.JLabel();
        jTxtProxyHost = new javax.swing.JTextField();
        jLbProxyport = new javax.swing.JLabel();
        jCBoxProxy = new javax.swing.JCheckBox();
        jTxtProxyPort = new javax.swing.JTextField();
        jBtnProxyOK = new javax.swing.JButton();
        jBtnProxyAbort = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Proxy settings");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLbProxyhost.setText("Proxyhost");

        jLbProxyport.setText("Proxyport");

        jCBoxProxy.setText("Use proxy");
        jCBoxProxy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBoxProxyActionPerformed(evt);
            }
        });

        jBtnProxyOK.setText("OK");
        jBtnProxyOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnProxyOKActionPerformed(evt);
            }
        });

        jBtnProxyAbort.setText("Cancel");
        jBtnProxyAbort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnProxyAbortActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(144, 144, 144)
                .addComponent(jCBoxProxy)
                .addContainerGap(187, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLbProxyhost)
                            .addComponent(jLbProxyport))
                        .addGap(25, 25, 25))
                    .addComponent(jBtnProxyOK))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 99, Short.MAX_VALUE)
                        .addComponent(jBtnProxyAbort)
                        .addGap(100, 100, 100))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jTxtProxyPort, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                            .addComponent(jTxtProxyHost, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE))
                        .addContainerGap(84, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jCBoxProxy)
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLbProxyhost)
                    .addComponent(jTxtProxyHost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLbProxyport)
                    .addComponent(jTxtProxyPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtnProxyOK)
                    .addComponent(jBtnProxyAbort))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Mit dem Cancel Button wird die Methode Abbruch() aufgerufen.
     */
    private void jBtnProxyAbortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnProxyAbortActionPerformed

        this.Abbruch();
    }//GEN-LAST:event_jBtnProxyAbortActionPerformed
    /**
     * Überwacht die Checkbox jCBoxProxy auf Veränderung.
     * Wird dazu benötigt die Textfelder jTxtProxyHost und jTxtProxyPort aktiv beziehungsweise inaktiv zu schalten.
     * Gleichzeitig wird die Variable ProxySet entsprechend der Checkbox jCBoxProxy gesetzt.
     */
    private void jCBoxProxyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBoxProxyActionPerformed

        if (jCBoxProxy.isSelected()) {
            ProxySet = "true";
            this.EnableAndDisableFields();
        } else {
            ProxySet = "false";
            this.EnableAndDisableFields();
        }
    }//GEN-LAST:event_jCBoxProxyActionPerformed
    /**
     * Speichert alle Werte und schließt die Oberfläche.
     * Ruft die Methode Speichern () auf welche alle Werte der Oberfläche übernimmt.
     * Diese werden der Methode setProxySettings aus Klasse cVerwalung übergeben.
     * Die Oberfläche jFrProxy wird geschlossen und die Hauptanwendung wieder freigegeben.
     */
    private void jBtnProxyOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnProxyOKActionPerformed

        this.Speichern();
        cVerwaltung.setProxySettings();
        this.dispose();
        cVerwaltung.GUIUnlock();
    }//GEN-LAST:event_jBtnProxyOKActionPerformed
    /**
     * Dient dazu den X Button der Oberfläche jFrProxy abzufangen.
     * Die Beendigung der kompletten Anwendung wird verhindert.
     * Stattdessen wird die Methode Abbruch aufgerufen.
     */
    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing

        this.Abbruch();
    }//GEN-LAST:event_formWindowClosing
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnProxyAbort;
    private javax.swing.JButton jBtnProxyOK;
    private javax.swing.JCheckBox jCBoxProxy;
    private javax.swing.JLabel jLbProxyhost;
    private javax.swing.JLabel jLbProxyport;
    private javax.swing.JTextField jTxtProxyHost;
    private javax.swing.JTextField jTxtProxyPort;
    // End of variables declaration//GEN-END:variables
}
